name: Deploy to Cloud Run

on:
  push:
    branches:
      - dev

jobs:
  merge-dev-to-main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for merging

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Switch to main and merge dev
        run: |
          git fetch origin main # Ensure main is up-to-date
          git checkout main
          git merge origin/dev --no-ff --allow-unrelated-histories -m "Merge dev into main" 
          git push origin main

  build-and-deploy:
    needs: merge-dev-to-main # Run this job only after the merge is successful
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write" # Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: "main" # Checkout the main branch after merge

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"

      - name: Configure Docker
        run: |-
          gcloud auth configure-docker gcr.io --quiet
          gcloud auth configure-docker ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev --quiet # For Artifact Registry if used

      - name: Build and Push Docker image to GCR
        env:
          PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"
          SERVICE_NAME: "${{ secrets.CLOUD_RUN_SERVICE_NAME }}"
        run: |-
          docker build -t "gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}" .
          docker push "gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}"

      - name: Deploy to Cloud Run
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "${{ secrets.CLOUD_RUN_SERVICE_NAME }}"
          region: "${{ secrets.CLOUD_RUN_REGION }}"
          image: "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}"
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          flags: "--allow-unauthenticated --port=80"
