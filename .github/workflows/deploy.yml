name: Deploy PR Preview to Cloud Run

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - dev # Trigger when PRs are made *against* the dev branch

jobs:
  build-and-deploy-pr-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: "read" # Permission to read the repository contents
      id-token: "write" # Permission to write OIDC token for GCP authentication

    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"

      - name: Configure Docker
        run: |
          gcloud auth configure-docker gcr.io --quiet
          gcloud auth configure-docker ${{ secrets.CLOUD_RUN_REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Docker image to GCR
        id: build-image
        env:
          PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"
          # Using the same service name for the image base, but with a unique PR tag
          IMAGE_BASENAME: "${{ secrets.CLOUD_RUN_SERVICE_NAME }}"
        run: |
          IMAGE_TAG="pr-${{ github.event.number }}-${{ github.event.pull_request.head.sha }}"
          FULL_IMAGE_NAME="gcr.io/$PROJECT_ID/$IMAGE_BASENAME:$IMAGE_TAG"
          echo "FULL_IMAGE_NAME=$FULL_IMAGE_NAME" >> $GITHUB_OUTPUT
          docker build -t "$FULL_IMAGE_NAME" .
          docker push "$FULL_IMAGE_NAME"

      - name: Deploy to Cloud Run
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "${{ secrets.CLOUD_RUN_SERVICE_NAME }}" # Deploying to your existing service
          region: "${{ secrets.CLOUD_RUN_REGION }}"
          image: ${{ steps.build-image.outputs.FULL_IMAGE_NAME }} # Use the image built in the previous step
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          flags: "--allow-unauthenticated --port=80"
